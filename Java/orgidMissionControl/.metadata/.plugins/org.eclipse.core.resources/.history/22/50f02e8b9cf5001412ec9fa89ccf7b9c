package com.rso.frontend.stats;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;

import javax.imageio.ImageIO;
import javax.swing.Box;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.MouseInputAdapter;

import org.apache.commons.lang.StringUtils;

import com.rso.common.model.ActivityOverview;
import com.rso.frontend.charts.LineChart;
import com.rso.gt.frontend.Helper;
 
public class StatsTab extends JPanel {
	
		
	private final static int ICON_WIDTH = 20;
	private final static int ICON_HEIGHT = 20;
	private final int THRESHOLD = 80;
	
    ImageIcon icOverview = createImageIcon("/overview.jpg");
    ImageIcon icon = createImageIcon("/bars.jpg");
    ImageIcon icon2 = createImageIcon("/cap1.jpg");
    ImageIcon icPieChart = createImageIcon("/pie.jpg");
    ImageIcon icBino = createImageIcon("/bino.jpg");
    ImageIcon icUp = createImageIcon("/arrow.png");
    
    
    ControlPanel cp ;
    ActivityOverview actOverview;
    JTabbedPane tabbedPane;
	
    public StatsTab(ActivityOverview actOverview, ControlPanel cp) {
        super(new GridLayout(1, 1));
         
        tabbedPane = new JTabbedPane();
        this.actOverview = actOverview;
        this.cp = cp;
        
        Helper.setTab(tabbedPane);
    
        actOverview.fetchCurrentStorageInfo();
        
        JPanel panel1 = new JPanel();//("Panel #1");
        tabbedPane.addTab("Overview", icOverview, panel1, "");
        tabbedPane.setMnemonicAt(0, KeyEvent.VK_1);
        panel1.setBackground(Color.WHITE);
        panel1.setLayout(new GridBagLayout ());
        
        GridBagConstraints gbc = new GridBagConstraints();
        
        // add a button
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.PAGE_START;
        gbc.weightx = 1;
        gbc.gridwidth = 4;
        gbc.ipady = 4;
        
        JLabel jlStorage = new JLabel("Current FileSystem Utilization");
        panel1.add(jlStorage, gbc);
        jlStorage.setFont(new Font("Arial Bold", Font.BOLD, 20));
        jlStorage.setForeground(Color.BLUE);
        
        // add a meter
      /*  gbc = new GridBagConstraints();
        gbc.ipadx = 3;
        gbc.ipady = 3;
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.gridheight = 2;
        gbc.weightx = 1;
        gbc.weighty = 1;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.anchor = GridBagConstraints.CENTER;
       // panel1.add( new JButton("way"), gbc);
        
        // and another
        // add a meter */
        
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.ipady = 0;
        gbc.gridwidth = 1;
        gbc.gridheight = 2;
        gbc.weightx = 1;
        gbc.weighty = 1;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.anchor = GridBagConstraints.CENTER;
        
        gbc.gridx = 0;
        panel1.add(actOverview.renderMeterChart(0), gbc);
        
      /*  gbc.gridx = 1;
        //gbc.fill = GridBagConstraints.BOTH;
        JLabel lbl3 = new JLabel();
        lbl3.setBackground(Color.WHITE);
        lbl3.setPreferredSize(new Dimension(20, 200) );
        panel1.add( lbl3, gbc);
        */
        
       /* gbc.gridx = 1;
        //gbc.fill = GridBagConstraints.BOTH;
        panel1.add( actOverview.renderMeterChart(1), gbc);
        */
        
        gbc.gridx = 1;
        //gbc.fill = GridBagConstraints.BOTH;
        panel1.add( actOverview.renderMeterChart(1), gbc);
        
        gbc.gridx = 3;
        //gbc.fill = GridBagConstraints.BOTH;
        panel1.add( actOverview.renderMeterChart(2), gbc);
        

        
        gbc.gridx = 3;
        //gbc.fill = GridBagConstraints.BOTH;
        JLabel lbl = new JLabel();
        lbl.setBackground(Color.WHITE);
        lbl.setPreferredSize(new Dimension(50, 300) );
        lbl.setOpaque(true);
        lbl.setBackground(Color.BLUE);
        panel1.add( lbl, gbc);
        
        gbc.gridx = 4;
        //gbc.fill = GridBagConstraints.BOTH;
        JLabel lbl2 = new JLabel();
        lbl2.setBackground(Color.WHITE);
        lbl2.setPreferredSize(new Dimension(200, 300) );
        panel1.add( lbl2, gbc);
        
        // and other
       
        
        // and another
        gbc = new GridBagConstraints();
        gbc.ipadx = 3;
        gbc.ipady = 3;
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.gridwidth = 3;
        gbc.gridheight = 4;
        gbc.weightx = 1;
        gbc.weighty = 1;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.anchor = GridBagConstraints.CENTER;
        panel1.add (new ActivityOverview().renderBarChart("Bandwidth Utilization",  "Month", "AVG Bandwidth Per Rqst", "Bandwidth"),gbc);
        
        
        // and another
        gbc = new GridBagConstraints();
        gbc.ipadx = 3;
        gbc.ipady = 3;
        gbc.gridx = 0;
        gbc.gridy = 9;
        gbc.gridwidth = 3;
        gbc.gridheight = 4;
        gbc.weightx = 1;
        gbc.weighty = 1;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.anchor = GridBagConstraints.CENTER;
        panel1.add (new ActivityOverview().renderBarChart("Memory Utilization",  "Month", "Number", "Memory"),gbc);
        
        // and another
        gbc = new GridBagConstraints();
        gbc.ipadx = 3;
        gbc.ipady = 3;
        gbc.gridx = 0;
        gbc.gridy = 13;
        gbc.gridwidth = 3;
        gbc.gridheight = 4;
        gbc.weightx = 1;
        gbc.weighty = 1;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.anchor = GridBagConstraints.PAGE_END;
        panel1.add (new ActivityOverview().renderBarChart("CPU Utilization",  "Month", "Number", "CPU"),gbc);
       // ( new BarChart3D().createCategoryChart("CPU Utilzation",  "Month", "Number"), gbc);
       
        
        
          /*JPanel panel2 = new JPanel();
        tabbedPane.addTab("Graphs", icon2, panel2, "Does twice as much nothing");
        
        panel2.setBackground(Color.WHITE);
        tabbedPane.setMnemonicAt(1, KeyEvent.VK_2);
      
        
        GridBagConstraints gbc2 = new GridBagConstraints();
        
        // add a button
        gbc2.gridx = 0;
        gbc2.gridy = 0;
        gbc2.anchor = GridBagConstraints.PAGE_START;

        gbc2.gridx = 1;
        panel2.add(new ActivityOverview().renderBarChart("CPU Utilzation",  "Month", "Number"), gbc);
        // add a meter
        gbc2 = new GridBagConstraints();
        gbc2.ipadx = 3;
        gbc2.ipady = 3;
        gbc2.gridx = 0;
        gbc2.gridy = 1;
        gbc2.gridwidth = 2;
        gbc2.gridheight = 2;
        gbc2.weightx = 1;
        gbc2.weighty = 1;
        gbc2.fill = GridBagConstraints.BOTH;
        gbc2.anchor = GridBagConstraints.CENTER;
        panel2.add( new ActivityOverview().renderBarChart("CPU Utilzation",  "Month", "Number"), gbc2);
        
               
        gbc2.gridy = 2;
        panel2.add( actOverview.renderBarChartCPU("CPU Util", "Month", "%", "from CpuMemoryDao"), gbc2); 
        
          */
        
        // third panel set up starts
         
        JComponent panel3 = new JPanel();
        tabbedPane.addTab("Usage Info", icPieChart, panel3, "");
        tabbedPane.setMnemonicAt(1, KeyEvent.VK_2);
        
     
        panel3.setPreferredSize(new Dimension(410, 50));
        tabbedPane.setTabPlacement(JTabbedPane.BOTTOM);
        panel3.setBackground(Color.WHITE);

        
        GridBagConstraints gbc3 = new GridBagConstraints();
        
        // add a button
        gbc3.gridx = 0;
        gbc3.gridy = 0;
        gbc3.anchor = GridBagConstraints.PAGE_START;

        gbc3.gridx = 1;
        //panel2.add(new JButton("new"), gbc);
        
        // add a meter
        gbc3 = new GridBagConstraints();
        gbc3.ipadx = 3;
        gbc3.ipady = 3;
        gbc3.gridx = 0;
        gbc3.gridy = 1;
        gbc3.gridwidth = 2;
        gbc3.gridheight = 2;
        gbc3.weightx = 1;
        gbc3.weighty = 1;
        gbc3.fill = GridBagConstraints.BOTH;
        gbc3.anchor = GridBagConstraints.CENTER;
        panel3.add( actOverview.renderPieChartBrowserInfo(), gbc3);
        
               
        gbc3.gridy = 2;
        panel3.add(  actOverview.renderBarChartDownloadInfo(), gbc3); 
        
        // third panel set up ends
        
        // forth panel set starts
         
       
        
        JComponent panel4 = new JPanel();
        panel4.setPreferredSize(new Dimension(410, 50));
        tabbedPane.addTab("Data Chart", icon, panel4, "");
        tabbedPane.setMnemonicAt(2, KeyEvent.VK_3);
        tabbedPane.setTabPlacement(JTabbedPane.BOTTOM);
        panel4.setBackground(Color.WHITE);

        
        GridBagConstraints gbc4 = new GridBagConstraints();
        
        // add a button
        gbc4.gridx = 0;
        gbc4.gridy = 0;
        gbc4.anchor = GridBagConstraints.PAGE_START;

        gbc4.gridx = 1;
        //panel2.add(new JButton("new"), gbc);
        
        // add a meter
        gbc4 = new GridBagConstraints();
        gbc4.ipadx = 3;
        gbc4.ipady = 3;
        gbc4.gridx = 0;
        gbc4.gridy = 1;
        gbc4.gridwidth = 2;
        gbc4.gridheight = 2;
        gbc4.weightx = 1;
        gbc4.weighty = 1;
        gbc4.fill = GridBagConstraints.BOTH;
        gbc4.anchor = GridBagConstraints.CENTER;
        panel4.add(actOverview.renderlineGraph("CPU Info", "Month", "%", "from CpuMemoryDao m where m.year=2017 "), gbc4);
        
               
        gbc4.gridy = 2;
        panel4.add(  actOverview.renderBarChartCPU("CPU Info", "Month", "%", "from CpuMemoryDao m where m.year=2017 "), gbc4); 
        
        // PANEL 5
        JPanel panel5 = new JPanel();//("Panel #1");
        tabbedPane.addTab("What to Watch", icBino, panel5,"Does nothing");
        panel5.setPreferredSize(new Dimension(800, 50));
        //panel5.setBackground(Color.WHITE);
        panel5.setLayout(new GridBagLayout());
		
		// add new constraint
		GridBagConstraints ct = new GridBagConstraints();
		ct.gridx = 0;
		ct.gridy = 0;
		ct.gridwidth = 1;
		ct.fill = GridBagConstraints.NONE;
		ct.anchor = GridBagConstraints.PAGE_START;
		ct.ipady = 40;
		
		JLabel jlTitle = new JLabel("WatchList:");
		jlTitle.setFont(new Font("Arial Bold", Font.BOLD, 12));
		jlTitle.setForeground(Color.BLUE);
		jlTitle.setPreferredSize(new Dimension(70,50));
		panel5.add(jlTitle,ct);
		
		
		for ( int i = 1 ; i < 12 ; ++ i)
		{
			ct.gridx = 0;
			ct.gridy = i;
			ct.ipady = 0;
			ct.gridwidth = 0;
			ct.fill = GridBagConstraints.NONE;
			ct.anchor = GridBagConstraints.CENTER;
			
			panel5.add(whatToWatchPanel("ORGID  AVG CPU Utilization","90", "2.45%",i * 8), ct);
		}
		
        tabbedPane.setMnemonicAt(3, KeyEvent.VK_4);
        tabbedPane.setTabPlacement(JTabbedPane.BOTTOM);
         
        //Add the tabbed pane to this panel.
        add(tabbedPane);
         
        //The following line enables to use scrolling tabs.
        tabbedPane.setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);
        
        
        // set listener
        events();
        
        // hide control panel
        cp.setVisible(false);
        
    }
     
    protected JPanel makeTextPanel(String text) 
    {
        JPanel panel = new JPanel(false);
        JButton filler = new JButton(text);
        filler.setHorizontalAlignment(JLabel.CENTER);
        panel.setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridwidth = 1;
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.insets = new Insets(0, 10, 0, 0);
        gbc.anchor = GridBagConstraints.PAGE_START;
        panel.add(filler, gbc);
        
        panel.setBackground(Color.BLACK);
        
        return panel;
    }
     
    /** Returns an ImageIcon, or null if the path was invalid. */
    protected static ImageIcon createImageIcon(String path) 
    {
    	
    	ImageIcon icon = null;
    	
        if (path != null) 
        {
        	try 
        	{
        		icon = new ImageIcon(new ImageIcon(Helper.getImage(path)).getImage().getScaledInstance(ICON_WIDTH, ICON_HEIGHT, java.awt.Image.SCALE_SMOOTH));
        	}
        	catch  (Exception ex)
        	{
        		// do nothing
        		ex.printStackTrace();
        	}
            return icon; 
        } 
        else 
        {
            System.err.println("Couldn't find file: " + path);
            return null;
        }
    }
    
    
    private JPanel whatToWatchPanel (String title, String currentValue, String differntial, int total_percent) {
    	
        // create left panel
        
        JPanel leftPanel = new JPanel();
        leftPanel.setLayout(new GridBagLayout());
        leftPanel.setPreferredSize(new Dimension(550,70));
        leftPanel.setBackground(new Color (16,78, 139));
		Dimension size_ = new Dimension(50, 30);
		
		 GridBagConstraints gbc = new GridBagConstraints();

		 Component horizontalGlue = new Box.Filler(size_, size_, size_);
		 
		 // put server group and server on one Vertical Group
		 Box bv = Box.createVerticalBox();
		 
		 JLabel serverInfo= new JLabel(title);
		 serverInfo.setFont(new Font("ARIAL BOLD",Font.BOLD, 16));
		 serverInfo.setForeground(Color.WHITE);
		 serverInfo.setPreferredSize(new Dimension(100,50));
		 serverInfo.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
		 
		 Box bh1 = Box.createHorizontalBox();
		 bh1.add(serverInfo);
		 bh1.add(horizontalGlue);
		 bh1.add(new JLabel());
		 
		 bv.add(bh1);
		 
		 JLabel serverInfo2= new JLabel(currentValue);
		 serverInfo2.setFont(new Font("ARIAL BOLD",Font.BOLD, 20));
		 serverInfo2.setForeground(Color.WHITE);
		// bv.add(serverInfo2);	
		 JLabel serverInfo3= new JLabel("",icUp,JLabel.CENTER);
		 serverInfo3.setForeground(Color.WHITE);
		 //bv.add(serverInfo3);	
		 JLabel serverInfo4= new JLabel(differntial,JLabel.RIGHT);
		 serverInfo4.setForeground(Color.WHITE);
		 
		 //bv.add(new Box.Filler(vsize_, vsize_, vsize_));
		 //bv.add(serverInfo);
		 
		 Box bh2 = Box.createHorizontalBox();
		 
		 bh2.add(serverInfo2);
		 bh2.add(new Box.Filler(new Dimension (20, 20), new Dimension (20, 20), new Dimension (20, 20)));
		 bh2.add(serverInfo3);
		 bh2.add(new Box.Filler(new Dimension (50, 20), new Dimension (50, 20), new Dimension (50, 20)));
		 bh2.add(serverInfo4);
		 
		 bv.add(bh2);
		 gbc = new GridBagConstraints();
	   // gbc.ipadx = 3;
	   // gbc.ipady = 3;
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.gridwidth = 1;
		gbc.gridheight = 2;
		gbc.weightx = 1;
		gbc.weighty = 1;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.anchor = GridBagConstraints.PAGE_START;
		leftPanel.add(bv, gbc);
		
		JLabel right = new JLabel(StringUtils.leftPad(new Integer(total_percent).toString(), 2,"0") + "%");
		
		right.setForeground(Color.WHITE);
		if ( total_percent < THRESHOLD)
			right.setBackground(Color.GREEN);
		else
			right.setBackground(Color.RED);
		right.setOpaque(true);
		right.setFont(new Font("Arial Bold", Font.BOLD,45));
		right.setPreferredSize(new Dimension(60,80));
		
		gbc.gridx = 1;
		leftPanel.add(right, gbc);
		
		gbc.gridx = 0;
		gbc.gridy = 1;
		gbc.gridwidth = 2;
		gbc.gridheight = 2;
		gbc.weightx = 1;
		gbc.weighty = 1;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.anchor = GridBagConstraints.PAGE_END;
		
		JLabel end = new JLabel(" ");
		end.setFont(new Font("Courier", Font.PLAIN,1));
		end.setPreferredSize(new Dimension(400,2));
		end.setBackground(Color.WHITE);
		end.setOpaque(true);
		leftPanel.add(end, gbc);
		
		
		return leftPanel;
    }
    
    private void events() 
    {
        tabbedPane.addMouseListener((new MouseInputAdapter() {	
			@Override
			public void mouseClicked(MouseEvent e) {
				// TODO Auto-generated method stub
				JTabbedPane tp = (JTabbedPane) e.getSource();
		        
		        if ( tp.getSelectedIndex() !=2 )
		        	cp.setVisible(false);
		        else
		        	cp.setVisible(true);
			}
		}));
    }
 
}